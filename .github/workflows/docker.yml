name: Publish Docker Image

on:
  workflow_dispatch:
  schedule:
    # UTC+0 周日 的 16 点，即 UTC+8 周一 的 0 点。
    - cron: "0 16 * * 0"
  # push:
  #   branches:
  #     - master

# 仅取消针对当前工作流正在进行的作业或运行
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "latest"
      - name: Setup Node.js@lts environment
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "pnpm"
      - run: pnpm i --frozen-lockfile
      - run: pnpm run start:tsx
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: List Docker directories
        id: list-docker-dirs
        run: |
          echo "::set-output name=dirs::$(ls -d ./docker/*/ | tr '\n' ' ')"
      - name: Build and push Docker images for each directory
        if: ${{ env.HAS_UPDATE == 'true' }}
        run: |
          for dir in ${{ steps.list-docker-dirs.outputs.dirs }}; do
            image_name=$(basename $dir)
            echo "Building and pushing image for $image_name"
            docker buildx build \
              --push \
              --platform linux/amd64,linux/arm64,linux/ppc64le \
              -t ${{ secrets.DOCKER_USERNAME }}/$image_name:latest \
              -t ${{ secrets.DOCKER_USERNAME }}/$image_name:alpine${{ env.ALPINE_LATEST_VERSION }}-node${{ env.NODEJS_LATEST_VERSION }} \
              -t ${{ secrets.DOCKER_USERNAME }}/$image_name:alpine${{ env.ALPINE_MAJOR_VERSION }}-node${{ env.NODEJS_MAJOR_VERSION }} \
              -t ${{ secrets.DOCKER_USERNAME }}/$image_name:$(TZ=Asia/Shanghai date '+%Y-%m-%d') \
              $dir
          done
      - name: Commit files
        id: commit-files
        if: ${{ env.HAS_UPDATE == 'true' }}
        run: |
          if [ -n "$(git status --porcelain README.md)" ]; then
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add README.md
            git commit -m "docs: update docker images version [skip ci]"
            echo "hasChange=true" >> $GITHUB_OUTPUT
          else
            echo "No changes detected"
          fi
      - name: Push changes
        uses: ad-m/github-push-action@master
        if: ${{ steps.commit-files.outputs.hasChange == 'true' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
